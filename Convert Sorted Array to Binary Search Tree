//https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
TreeNode* sortBST(vector<int>& nums, int l, int r) {
	if (l > r) {
		return NULL;
	}
	else if (l == r) {
		return new TreeNode(nums[l]);
	}
	int k = l + (r - l) / 2;
	TreeNode* root = new TreeNode(nums[k]);
	root->left = sortBST(nums, l, k - 1);
	root->right = sortBST(nums, k + 1, r);
	return root;
}

class Solution {
public:
	TreeNode* sortedArrayToBST(vector<int>& nums) {
		return sortBST(nums, 0, nums.size() - 1);
	}
};
