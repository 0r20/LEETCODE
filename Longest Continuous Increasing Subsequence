https://leetcode.com/problems/longest-continuous-increasing-subsequence/
class Solution {
public:
	int findLengthOfLCIS(vector<int>& nums) {
		vector<int> ans;
		int sum = 0;
		if (nums.size() == 0) {
			return sum;
		}
		if (nums.size() == 1) {
			return 1;
		}
		sum = 1;
		for (int i = 0; i < nums.size() - 1; i++) {
			if (nums[i] < nums[i + 1]) {
				sum++;
			}
			else {
				ans.push_back(sum);
				sum = 1;
			}
		}
		if (nums[nums.size() - 2] < nums[nums.size() - 1]) {
			ans.push_back(sum);
		}
		int max = ans[0];
		// if(ans.size()!=1){
		for (int i = 1; i < ans.size(); i++) {
			if (max < ans[i]) {
				max = ans[i];
			}
		}
		// }
		return max;
	}
};
